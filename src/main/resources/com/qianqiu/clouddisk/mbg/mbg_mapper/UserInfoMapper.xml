<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qianqiu.clouddisk.mbg.mbg_mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.qianqiu.clouddisk.mbg.mbg_model.UserInfo">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq_open_id" jdbcType="VARCHAR" property="qqOpenId" />
    <result column="qq_avatar" jdbcType="VARCHAR" property="qqAvatar" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="use_space" jdbcType="BIGINT" property="useSpace" />
    <result column="total_space" jdbcType="BIGINT" property="totalSpace" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, nick_name, email, qq_open_id, qq_avatar, password, create_time, last_login_time, 
    status, use_space, total_space, update_time, avatar_url
  </sql>
  <select id="selectByExample" parameterType="com.qianqiu.clouddisk.mbg.mbg_model.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qianqiu.clouddisk.mbg.mbg_model.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qianqiu.clouddisk.mbg.mbg_model.UserInfo">
    insert into user_info (user_id, nick_name, email, 
      qq_open_id, qq_avatar, password, 
      create_time, last_login_time, status, 
      use_space, total_space, update_time, 
      avatar_url)
    values (#{userId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{qqOpenId,jdbcType=VARCHAR}, #{qqAvatar,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{useSpace,jdbcType=BIGINT}, #{totalSpace,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{avatarUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qianqiu.clouddisk.mbg.mbg_model.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="qqOpenId != null">
        qq_open_id,
      </if>
      <if test="qqAvatar != null">
        qq_avatar,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="useSpace != null">
        use_space,
      </if>
      <if test="totalSpace != null">
        total_space,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qqOpenId != null">
        #{qqOpenId,jdbcType=VARCHAR},
      </if>
      <if test="qqAvatar != null">
        #{qqAvatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="useSpace != null">
        #{useSpace,jdbcType=BIGINT},
      </if>
      <if test="totalSpace != null">
        #{totalSpace,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qianqiu.clouddisk.mbg.mbg_model.UserInfoExample" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=VARCHAR},
      </if>
      <if test="row.nickName != null">
        nick_name = #{row.nickName,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.qqOpenId != null">
        qq_open_id = #{row.qqOpenId,jdbcType=VARCHAR},
      </if>
      <if test="row.qqAvatar != null">
        qq_avatar = #{row.qqAvatar,jdbcType=VARCHAR},
      </if>
      <if test="row.password != null">
        password = #{row.password,jdbcType=VARCHAR},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastLoginTime != null">
        last_login_time = #{row.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.useSpace != null">
        use_space = #{row.useSpace,jdbcType=BIGINT},
      </if>
      <if test="row.totalSpace != null">
        total_space = #{row.totalSpace,jdbcType=BIGINT},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.avatarUrl != null">
        avatar_url = #{row.avatarUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set user_id = #{row.userId,jdbcType=VARCHAR},
      nick_name = #{row.nickName,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      qq_open_id = #{row.qqOpenId,jdbcType=VARCHAR},
      qq_avatar = #{row.qqAvatar,jdbcType=VARCHAR},
      password = #{row.password,jdbcType=VARCHAR},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      last_login_time = #{row.lastLoginTime,jdbcType=TIMESTAMP},
      status = #{row.status,jdbcType=INTEGER},
      use_space = #{row.useSpace,jdbcType=BIGINT},
      total_space = #{row.totalSpace,jdbcType=BIGINT},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      avatar_url = #{row.avatarUrl,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qianqiu.clouddisk.mbg.mbg_model.UserInfo">
    update user_info
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qqOpenId != null">
        qq_open_id = #{qqOpenId,jdbcType=VARCHAR},
      </if>
      <if test="qqAvatar != null">
        qq_avatar = #{qqAvatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="useSpace != null">
        use_space = #{useSpace,jdbcType=BIGINT},
      </if>
      <if test="totalSpace != null">
        total_space = #{totalSpace,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qianqiu.clouddisk.mbg.mbg_model.UserInfo">
    update user_info
    set nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq_open_id = #{qqOpenId,jdbcType=VARCHAR},
      qq_avatar = #{qqAvatar,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      use_space = #{useSpace,jdbcType=BIGINT},
      total_space = #{totalSpace,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>